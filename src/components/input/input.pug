mixin input(input)
  - const {text, id, labelHidden, descr, type, value, placeholder, format, amount, role, readonly, autocorrect, inputmode, autocomplete, patern, onfocus, onblur, maxlength, tabindex, mod, aria} = input;
  - const {ariaHidden} = aria || 0;
  - let modClasses = '';
  - if (mod) {
  -   let styles = Object.values(mod);
  -   for (index in styles) {
  -     if (styles[index] == '') {
  -       modClasses = modClasses;
  -     } else {
  -       modClasses = modClasses + (index != 0 ? ' ' : '') + 'input__field_' + styles[index];
  -     }
  -   }
  - }

  .input
    if text
      .input__top
        +label({
          forId: id,
          text: text,
          mod: {visible: labelHidden ? "hidden" : "large"},
        })
        if descr
          span.input__descr=descr
    input.input__field(
      class=modClasses
      id=id 
      type=(type ? type : "text")
      value=value
      required
      placeholder=placeholder
      data-date-format=format
      data-amount=amount
      data-role=role
      readonly=(readonly ? readonly : false)
      autocorrect=(autocorrect ? autocorrect : false)
      inputmode=(inputmode ? inputmode: false)
      autocomplete=(autocomplete ? autocomplete : "off")
      patern=(patern? patern : false)
      onfocus=(onfocus ? onfocus : false)
      onblur=(onblur ? onblur : false)
      maxlength=(maxlength ? maxlength : false)
      tabindex=(tabindex ? tabindex : 0)
      aria-hidden=(ariaHidden ? true : false)
      )